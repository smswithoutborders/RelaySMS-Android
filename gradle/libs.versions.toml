[versions]
activity = "1.10.0"
agp = "8.3.2"
annotation = "1.9.1"
appauth = "0.11.1"
appcompat = "1.7.0"
armadillo = "1.0.0"
baselibrary = "3.2.0-alpha11"
biometric = "1.1.0"
ccp = "2.7.0"
circleimageview = "3.1.0"
constraintlayout = "2.2.0"
dots = "1.0.1"
espressoCore = "3.6.1"
fernetJava8 = "1.4.2"
fragment = "1.8.5"
fuelVersion = "2.2.1"
grpcCore = "1.64.0"
javaxAnnotationApi = "1.3.2"
junit = "4.13.2"
junitVersion = "1.2.1"
kotlin = "2.0.0"
kotlinxCoroutinesTest = "1.9.0"
kotlinxSerializationJson = "1.6.3"
legacySupportV4 = "1.0.0"
lifecycleExtensions = "2.2.0"
lifecycleViewmodelKtx = "2.8.7"
material = "1.12.0"
materialVersion = "1.7.6"
okhttp = "2.7.5"
playServicesAuth = "21.3.0"
playServicesAuthApiPhone = "18.1.0"
preferenceKtx = "1.2.1"
protobufJava = "3.25.1"
roomRuntime = "2.6.1"
smswithoutborders_libsignal = "0.0.10"
startupRuntime = "1.2.0"
swiperefreshlayout = "1.2.0-alpha01"
volley = "1.2.1"
workRuntime = "2.10.0"

[libraries]
androidx-activity = { module = "androidx.activity:activity", version.ref = "activity" }
androidx-annotation = { module = "androidx.annotation:annotation", version.ref = "annotation" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
androidx-baselibrary = { module = "androidx.databinding:baseLibrary", version.ref = "baselibrary" }
androidx-biometric = { module = "androidx.biometric:biometric", version.ref = "biometric" }
androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintlayout" }
androidx-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "espressoCore" }
androidx-fragment = { module = "androidx.fragment:fragment", version.ref = "fragment" }
androidx-junit = { module = "androidx.test.ext:junit", version.ref = "junitVersion" }
androidx-legacy-support-v4 = { module = "androidx.legacy:legacy-support-v4", version.ref = "legacySupportV4" }
androidx-lifecycle-extensions = { module = "androidx.lifecycle:lifecycle-extensions", version.ref = "lifecycleExtensions" }
androidx-lifecycle-livedata-ktx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycleViewmodelKtx" }
androidx-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycleViewmodelKtx" }
androidx-material = { module = "androidx.compose.material:material", version.ref = "materialVersion" }
androidx-preference = { module = "androidx.preference:preference", version.ref = "preferenceKtx" }
androidx-preference-ktx = { module = "androidx.preference:preference-ktx", version.ref = "preferenceKtx" }
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "roomRuntime" }
androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "roomRuntime" }
androidx-startup-runtime = { module = "androidx.startup:startup-runtime", version.ref = "startupRuntime" }
androidx-swiperefreshlayout = { module = "androidx.swiperefreshlayout:swiperefreshlayout", version.ref = "swiperefreshlayout" }
androidx-work-runtime = { module = "androidx.work:work-runtime", version.ref = "workRuntime" }
appauth = { module = "net.openid:appauth", version.ref = "appauth" }
armadillo = { module = "at.favre.lib:armadillo", version.ref = "armadillo" }
ccp = { module = "com.hbb20:ccp", version.ref = "ccp" }
circleimageview = { module = "de.hdodenhof:circleimageview", version.ref = "circleimageview" }
dots = { module = "com.github.tizisdeepan:dots", version.ref = "dots" }
fernet-java8 = { module = "com.macasaet.fernet:fernet-java8", version.ref = "fernetJava8" }
fuel = { module = "com.github.kittinunf.fuel:fuel", version.ref = "fuelVersion" }
fuel-android = { module = "com.github.kittinunf.fuel:fuel-android", version.ref = "fuelVersion" }
fuel-coroutines = { module = "com.github.kittinunf.fuel:fuel-coroutines", version.ref = "fuelVersion" }
grpc-core = { module = "io.grpc:grpc-core", version.ref = "grpcCore" }
grpc-okhttp = { module = "io.grpc:grpc-okhttp", version.ref = "grpcCore" }
grpc-protobuf-lite = { module = "io.grpc:grpc-protobuf-lite", version.ref = "grpcCore" }
grpc-stub = { module = "io.grpc:grpc-stub", version.ref = "grpcCore" }
javax-annotation-api = { module = "javax.annotation:javax.annotation-api", version.ref = "javaxAnnotationApi" }
junit = { module = "junit:junit", version.ref = "junit" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxCoroutinesTest" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }
material = { module = "com.google.android.material:material", version.ref = "material" }
okhttp = { module = "com.squareup.okhttp:okhttp", version.ref = "okhttp" }
play-services-auth = { module = "com.google.android.gms:play-services-auth", version.ref = "playServicesAuth" }
play-services-auth-api-phone = { module = "com.google.android.gms:play-services-auth-api-phone", version.ref = "playServicesAuthApiPhone" }
protobuf-java = { module = "com.google.protobuf:protobuf-java", version.ref = "protobufJava" }
smswithoutborders_libsignal = { module = "com.afkanerd.oss1:smswithoutborders_libsignal", version.ref = "smswithoutborders_libsignal" }
volley = { module = "com.android.volley:volley", version.ref = "volley" }

[plugins]
org-jetbrains-kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
